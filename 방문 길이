// 프로그래머스 Level 3 방문 길이
// 지나갔던 길은 시작위치+도착위치, 도착위치+시작위치 스트링으로 만들어 해쉬셋에 


import java.util.*;

class Solution {
   public int solution(String dirs) {
		int answer = 0;
		int N = 5;
		int minN = -5;
		int x = 0;
		int y = 0;
		HashSet<String> list = new HashSet();
		for (int i = 0; i < dirs.length(); i++) {
			char val = dirs.charAt(i);
			String check = "";
			String check2 = "";
			switch (val) {
			case 'U':
				check = "" + x + "" + y;
				check2 = check;
				if(y+1 <= N) {
					y = y+1;
					check = check + "" + x + "" + y;
					check2 = "" + x + "" + y + check2;
					if(!list.contains(check) && !list.contains(check2)) {
						list.add(check);
						list.add(check2);
						answer++;
					}
				}				
				break;
			case 'L':
				check = "" + x + "" + y;
				check2 = check;
				if(x-1 >= minN) {
					x = x-1;
					check = check + "" + x + "" + y;
					check2 = "" + x + "" + y + check2;
					if(!list.contains(check) && !list.contains(check2)) {
						list.add(check);
						list.add(check2);
						answer++;
					}
				}	
				break;
			case 'R':
				check = "" + x + "" + y;
				check2 = check;
				if(x+1 <= N) {
					x = x+1;
					check = check + "" + x + "" + y;
					check2 = "" + x + "" + y + check2;
					if(!list.contains(check) && !list.contains(check2)) {
						list.add(check);
						list.add(check2);
						answer++;
					}
				}	
				break;
			case 'D':
				check = "" + x + "" + y;
				check2 = check;
				if(y-1 >= minN) {
					y = y-1;
					check = check + "" + x + "" + y;
					check2 = "" + x + "" + y + check2;
					if(!list.contains(check) && !list.contains(check2)) {
						list.add(check);
						list.add(check2);
						answer++;
					}
				}	
				break;

			}
		}
		return answer;
	}
}
